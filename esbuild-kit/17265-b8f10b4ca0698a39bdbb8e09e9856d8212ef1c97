{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const fs=require(\"graceful-fs\");const path=require(\"path\");const mkdirs=require(\"../mkdirs\").mkdirs;const pathExists=require(\"../path-exists\").pathExists;const utimesMillis=require(\"../util/utimes\").utimesMillis;const stat=require(\"../util/stat\");function copy(src,dest,opts,cb){if(typeof opts===\"function\"&&!cb){cb=opts;opts={}}else if(typeof opts===\"function\"){opts={filter:opts}}cb=cb||function(){};opts=opts||{};opts.clobber=\"clobber\"in opts?!!opts.clobber:true;opts.overwrite=\"overwrite\"in opts?!!opts.overwrite:opts.clobber;if(opts.preserveTimestamps&&process.arch===\"ia32\"){process.emitWarning(\"Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n\tsee https://github.com/jprichardson/node-fs-extra/issues/269\",\"Warning\",\"fs-extra-WARN0001\")}stat.checkPaths(src,dest,\"copy\",opts,(err,stats)=>{if(err)return cb(err);const{srcStat,destStat}=stats;stat.checkParentPaths(src,srcStat,dest,\"copy\",err2=>{if(err2)return cb(err2);runFilter(src,dest,opts,(err3,include)=>{if(err3)return cb(err3);if(!include)return cb();checkParentDir(destStat,src,dest,opts,cb)})})})}__name(copy,\"copy\");function checkParentDir(destStat,src,dest,opts,cb){const destParent=path.dirname(dest);pathExists(destParent,(err,dirExists)=>{if(err)return cb(err);if(dirExists)return getStats(destStat,src,dest,opts,cb);mkdirs(destParent,err2=>{if(err2)return cb(err2);return getStats(destStat,src,dest,opts,cb)})})}__name(checkParentDir,\"checkParentDir\");function runFilter(src,dest,opts,cb){if(!opts.filter)return cb(null,true);Promise.resolve(opts.filter(src,dest)).then(include=>cb(null,include),error=>cb(error))}__name(runFilter,\"runFilter\");function getStats(destStat,src,dest,opts,cb){const stat2=opts.dereference?fs.stat:fs.lstat;stat2(src,(err,srcStat)=>{if(err)return cb(err);if(srcStat.isDirectory())return onDir(srcStat,destStat,src,dest,opts,cb);else if(srcStat.isFile()||srcStat.isCharacterDevice()||srcStat.isBlockDevice())return onFile(srcStat,destStat,src,dest,opts,cb);else if(srcStat.isSymbolicLink())return onLink(destStat,src,dest,opts,cb);else if(srcStat.isSocket())return cb(new Error(`Cannot copy a socket file: ${src}`));else if(srcStat.isFIFO())return cb(new Error(`Cannot copy a FIFO pipe: ${src}`));return cb(new Error(`Unknown file: ${src}`))})}__name(getStats,\"getStats\");function onFile(srcStat,destStat,src,dest,opts,cb){if(!destStat)return copyFile(srcStat,src,dest,opts,cb);return mayCopyFile(srcStat,src,dest,opts,cb)}__name(onFile,\"onFile\");function mayCopyFile(srcStat,src,dest,opts,cb){if(opts.overwrite){fs.unlink(dest,err=>{if(err)return cb(err);return copyFile(srcStat,src,dest,opts,cb)})}else if(opts.errorOnExist){return cb(new Error(`'${dest}' already exists`))}else return cb()}__name(mayCopyFile,\"mayCopyFile\");function copyFile(srcStat,src,dest,opts,cb){fs.copyFile(src,dest,err=>{if(err)return cb(err);if(opts.preserveTimestamps)return handleTimestampsAndMode(srcStat.mode,src,dest,cb);return setDestMode(dest,srcStat.mode,cb)})}__name(copyFile,\"copyFile\");function handleTimestampsAndMode(srcMode,src,dest,cb){if(fileIsNotWritable(srcMode)){return makeFileWritable(dest,srcMode,err=>{if(err)return cb(err);return setDestTimestampsAndMode(srcMode,src,dest,cb)})}return setDestTimestampsAndMode(srcMode,src,dest,cb)}__name(handleTimestampsAndMode,\"handleTimestampsAndMode\");function fileIsNotWritable(srcMode){return(srcMode&128)===0}__name(fileIsNotWritable,\"fileIsNotWritable\");function makeFileWritable(dest,srcMode,cb){return setDestMode(dest,srcMode|128,cb)}__name(makeFileWritable,\"makeFileWritable\");function setDestTimestampsAndMode(srcMode,src,dest,cb){setDestTimestamps(src,dest,err=>{if(err)return cb(err);return setDestMode(dest,srcMode,cb)})}__name(setDestTimestampsAndMode,\"setDestTimestampsAndMode\");function setDestMode(dest,srcMode,cb){return fs.chmod(dest,srcMode,cb)}__name(setDestMode,\"setDestMode\");function setDestTimestamps(src,dest,cb){fs.stat(src,(err,updatedSrcStat)=>{if(err)return cb(err);return utimesMillis(dest,updatedSrcStat.atime,updatedSrcStat.mtime,cb)})}__name(setDestTimestamps,\"setDestTimestamps\");function onDir(srcStat,destStat,src,dest,opts,cb){if(!destStat)return mkDirAndCopy(srcStat.mode,src,dest,opts,cb);return copyDir(src,dest,opts,cb)}__name(onDir,\"onDir\");function mkDirAndCopy(srcMode,src,dest,opts,cb){fs.mkdir(dest,err=>{if(err)return cb(err);copyDir(src,dest,opts,err2=>{if(err2)return cb(err2);return setDestMode(dest,srcMode,cb)})})}__name(mkDirAndCopy,\"mkDirAndCopy\");function copyDir(src,dest,opts,cb){fs.readdir(src,(err,items)=>{if(err)return cb(err);return copyDirItems(items,src,dest,opts,cb)})}__name(copyDir,\"copyDir\");function copyDirItems(items,src,dest,opts,cb){const item=items.pop();if(!item)return cb();return copyDirItem(items,item,src,dest,opts,cb)}__name(copyDirItems,\"copyDirItems\");function copyDirItem(items,item,src,dest,opts,cb){const srcItem=path.join(src,item);const destItem=path.join(dest,item);runFilter(srcItem,destItem,opts,(err,include)=>{if(err)return cb(err);if(!include)return copyDirItems(items,src,dest,opts,cb);stat.checkPaths(srcItem,destItem,\"copy\",opts,(err2,stats)=>{if(err2)return cb(err2);const{destStat}=stats;getStats(destStat,srcItem,destItem,opts,err3=>{if(err3)return cb(err3);return copyDirItems(items,src,dest,opts,cb)})})})}__name(copyDirItem,\"copyDirItem\");function onLink(destStat,src,dest,opts,cb){fs.readlink(src,(err,resolvedSrc)=>{if(err)return cb(err);if(opts.dereference){resolvedSrc=path.resolve(process.cwd(),resolvedSrc)}if(!destStat){return fs.symlink(resolvedSrc,dest,cb)}else{fs.readlink(dest,(err2,resolvedDest)=>{if(err2){if(err2.code===\"EINVAL\"||err2.code===\"UNKNOWN\")return fs.symlink(resolvedSrc,dest,cb);return cb(err2)}if(opts.dereference){resolvedDest=path.resolve(process.cwd(),resolvedDest)}if(stat.isSrcSubdir(resolvedSrc,resolvedDest)){return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))}if(stat.isSrcSubdir(resolvedDest,resolvedSrc)){return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))}return copyLink(resolvedSrc,dest,cb)})}})}__name(onLink,\"onLink\");function copyLink(resolvedSrc,dest,cb){fs.unlink(dest,err=>{if(err)return cb(err);return fs.symlink(resolvedSrc,dest,cb)})}__name(copyLink,\"copyLink\");module.exports=copy;\n})()\n","warnings":[],"map":{"version":3,"mappings":"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","names":["err","stat"],"sources":["/root/porla/front-end-mergeVersion/fantastic-admin.v2.11.0/node_modules/.pnpm/fs-extra@11.1.1/node_modules/fs-extra/lib/copy/copy.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirs = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimesMillis = require('../util/utimes').utimesMillis\nconst stat = require('../util/stat')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning(\n      'Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' +\n      '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269',\n      'Warning', 'fs-extra-WARN0001'\n    )\n  }\n\n  stat.checkPaths(src, dest, 'copy', opts, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {\n      if (err) return cb(err)\n      runFilter(src, dest, opts, (err, include) => {\n        if (err) return cb(err)\n        if (!include) return cb()\n\n        checkParentDir(destStat, src, dest, opts, cb)\n      })\n    })\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return getStats(destStat, src, dest, opts, cb)\n    mkdirs(destParent, err => {\n      if (err) return cb(err)\n      return getStats(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction runFilter (src, dest, opts, cb) {\n  if (!opts.filter) return cb(null, true)\n  Promise.resolve(opts.filter(src, dest))\n    .then(include => cb(null, include), error => cb(error))\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n    else if (srcStat.isSocket()) return cb(new Error(`Cannot copy a socket file: ${src}`))\n    else if (srcStat.isFIFO()) return cb(new Error(`Cannot copy a FIFO pipe: ${src}`))\n    return cb(new Error(`Unknown file: ${src}`))\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  fs.copyFile(src, dest, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) return handleTimestampsAndMode(srcStat.mode, src, dest, cb)\n    return setDestMode(dest, srcStat.mode, cb)\n  })\n}\n\nfunction handleTimestampsAndMode (srcMode, src, dest, cb) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) {\n    return makeFileWritable(dest, srcMode, err => {\n      if (err) return cb(err)\n      return setDestTimestampsAndMode(srcMode, src, dest, cb)\n    })\n  }\n  return setDestTimestampsAndMode(srcMode, src, dest, cb)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode, cb) {\n  return setDestMode(dest, srcMode | 0o200, cb)\n}\n\nfunction setDestTimestampsAndMode (srcMode, src, dest, cb) {\n  setDestTimestamps(src, dest, err => {\n    if (err) return cb(err)\n    return setDestMode(dest, srcMode, cb)\n  })\n}\n\nfunction setDestMode (dest, srcMode, cb) {\n  return fs.chmod(dest, srcMode, cb)\n}\n\nfunction setDestTimestamps (src, dest, cb) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  fs.stat(src, (err, updatedSrcStat) => {\n    if (err) return cb(err)\n    return utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime, cb)\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts, cb)\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return setDestMode(dest, srcMode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  runFilter(srcItem, destItem, opts, (err, include) => {\n    if (err) return cb(err)\n    if (!include) return copyDirItems(items, src, dest, opts, cb)\n\n    stat.checkPaths(srcItem, destItem, 'copy', opts, (err, stats) => {\n      if (err) return cb(err)\n      const { destStat } = stats\n      getStats(destStat, srcItem, destItem, opts, err => {\n        if (err) return cb(err)\n        return copyDirItems(items, src, dest, opts, cb)\n      })\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (!destStat) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\nmodule.exports = copy\n"]}}