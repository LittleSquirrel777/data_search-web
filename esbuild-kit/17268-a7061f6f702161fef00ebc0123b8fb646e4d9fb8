{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const u=require(\"universalify\").fromCallback;const path=require(\"path\");const fs=require(\"graceful-fs\");const mkdir=require(\"../mkdirs\");const pathExists=require(\"../path-exists\").pathExists;const{areIdentical}=require(\"../util/stat\");function createLink(srcpath,dstpath,callback){function makeLink(srcpath2,dstpath2){fs.link(srcpath2,dstpath2,err=>{if(err)return callback(err);callback(null)})}__name(makeLink,\"makeLink\");fs.lstat(dstpath,(_,dstStat)=>{fs.lstat(srcpath,(err,srcStat)=>{if(err){err.message=err.message.replace(\"lstat\",\"ensureLink\");return callback(err)}if(dstStat&&areIdentical(srcStat,dstStat))return callback(null);const dir=path.dirname(dstpath);pathExists(dir,(err2,dirExists)=>{if(err2)return callback(err2);if(dirExists)return makeLink(srcpath,dstpath);mkdir.mkdirs(dir,err3=>{if(err3)return callback(err3);makeLink(srcpath,dstpath)})})})})}__name(createLink,\"createLink\");function createLinkSync(srcpath,dstpath){let dstStat;try{dstStat=fs.lstatSync(dstpath)}catch{}try{const srcStat=fs.lstatSync(srcpath);if(dstStat&&areIdentical(srcStat,dstStat))return}catch(err){err.message=err.message.replace(\"lstat\",\"ensureLink\");throw err}const dir=path.dirname(dstpath);const dirExists=fs.existsSync(dir);if(dirExists)return fs.linkSync(srcpath,dstpath);mkdir.mkdirsSync(dir);return fs.linkSync(srcpath,dstpath)}__name(createLinkSync,\"createLinkSync\");module.exports={createLink:u(createLink),createLinkSync};\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,MAAM,EAAI,QAAQ,cAAc,EAAE,aAClC,MAAM,KAAO,QAAQ,MAAM,EAC3B,MAAM,GAAK,QAAQ,aAAa,EAChC,MAAM,MAAQ,QAAQ,WAAW,EACjC,MAAM,WAAa,QAAQ,gBAAgB,EAAE,WAC7C,KAAM,CAAE,YAAa,EAAI,QAAQ,cAAc,EAE/C,SAAS,WAAY,QAAS,QAAS,SAAU,CAC/C,SAAS,SAAUA,SAASC,SAAS,CACnC,GAAG,KAAKD,SAASC,SAAS,KAAO,CAC/B,GAAI,IAAK,OAAO,SAAS,GAAG,EAC5B,SAAS,IAAI,CACf,CAAC,CACH,CALS,4BAOT,GAAG,MAAM,QAAS,CAAC,EAAG,UAAY,CAChC,GAAG,MAAM,QAAS,CAAC,IAAK,UAAY,CAClC,GAAI,IAAK,CACP,IAAI,QAAU,IAAI,QAAQ,QAAQ,QAAS,YAAY,EACvD,OAAO,SAAS,GAAG,CACrB,CACA,GAAI,SAAW,aAAa,QAAS,OAAO,EAAG,OAAO,SAAS,IAAI,EAEnE,MAAM,IAAM,KAAK,QAAQ,OAAO,EAChC,WAAW,IAAK,CAACC,KAAK,YAAc,CAClC,GAAIA,KAAK,OAAO,SAASA,IAAG,EAC5B,GAAI,UAAW,OAAO,SAAS,QAAS,OAAO,EAC/C,MAAM,OAAO,IAAKA,MAAO,CACvB,GAAIA,KAAK,OAAO,SAASA,IAAG,EAC5B,SAAS,QAAS,OAAO,CAC3B,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CACH,CA3BS,gCA6BT,SAAS,eAAgB,QAAS,QAAS,CACzC,IAAI,QACJ,GAAI,CACF,QAAU,GAAG,UAAU,OAAO,CAChC,MAAE,CAAO,CAET,GAAI,CACF,MAAM,QAAU,GAAG,UAAU,OAAO,EACpC,GAAI,SAAW,aAAa,QAAS,OAAO,EAAG,MACjD,OAAS,IAAP,CACA,IAAI,QAAU,IAAI,QAAQ,QAAQ,QAAS,YAAY,EACvD,MAAM,GACR,CAEA,MAAM,IAAM,KAAK,QAAQ,OAAO,EAChC,MAAM,UAAY,GAAG,WAAW,GAAG,EACnC,GAAI,UAAW,OAAO,GAAG,SAAS,QAAS,OAAO,EAClD,MAAM,WAAW,GAAG,EAEpB,OAAO,GAAG,SAAS,QAAS,OAAO,CACrC,CApBS,wCAsBT,OAAO,QAAU,CACf,WAAY,EAAE,UAAU,EACxB,cACF","names":["srcpath","dstpath","err"],"sources":["/root/porla/data_system-web/node_modules/.pnpm/fs-extra@11.1.1/node_modules/fs-extra/lib/ensure/link.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\nconst { areIdentical } = require('../util/stat')\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  fs.lstat(dstpath, (_, dstStat) => {\n    fs.lstat(srcpath, (err, srcStat) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n      if (dstStat && areIdentical(srcStat, dstStat)) return callback(null)\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  let dstStat\n  try {\n    dstStat = fs.lstatSync(dstpath)\n  } catch {}\n\n  try {\n    const srcStat = fs.lstatSync(srcpath)\n    if (dstStat && areIdentical(srcStat, dstStat)) return\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n"]}}