{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const fs=require(\"graceful-fs\");const path=require(\"path\");const copySync=require(\"../copy\").copySync;const removeSync=require(\"../remove\").removeSync;const mkdirpSync=require(\"../mkdirs\").mkdirpSync;const stat=require(\"../util/stat\");function moveSync(src,dest,opts){opts=opts||{};const overwrite=opts.overwrite||opts.clobber||false;const{srcStat,isChangingCase=false}=stat.checkPathsSync(src,dest,\"move\",opts);stat.checkParentPathsSync(src,srcStat,dest,\"move\");if(!isParentRoot(dest))mkdirpSync(path.dirname(dest));return doRename(src,dest,overwrite,isChangingCase)}__name(moveSync,\"moveSync\");function isParentRoot(dest){const parent=path.dirname(dest);const parsedPath=path.parse(parent);return parsedPath.root===parent}__name(isParentRoot,\"isParentRoot\");function doRename(src,dest,overwrite,isChangingCase){if(isChangingCase)return rename(src,dest,overwrite);if(overwrite){removeSync(dest);return rename(src,dest,overwrite)}if(fs.existsSync(dest))throw new Error(\"dest already exists.\");return rename(src,dest,overwrite)}__name(doRename,\"doRename\");function rename(src,dest,overwrite){try{fs.renameSync(src,dest)}catch(err){if(err.code!==\"EXDEV\")throw err;return moveAcrossDevice(src,dest,overwrite)}}__name(rename,\"rename\");function moveAcrossDevice(src,dest,overwrite){const opts={overwrite,errorOnExist:true,preserveTimestamps:true};copySync(src,dest,opts);return removeSync(src)}__name(moveAcrossDevice,\"moveAcrossDevice\");module.exports=moveSync;\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,MAAM,GAAK,QAAQ,aAAa,EAChC,MAAM,KAAO,QAAQ,MAAM,EAC3B,MAAM,SAAW,QAAQ,SAAS,EAAE,SACpC,MAAM,WAAa,QAAQ,WAAW,EAAE,WACxC,MAAM,WAAa,QAAQ,WAAW,EAAE,WACxC,MAAM,KAAO,QAAQ,cAAc,EAEnC,SAAS,SAAU,IAAK,KAAM,KAAM,CAClC,KAAO,MAAQ,CAAC,EAChB,MAAM,UAAY,KAAK,WAAa,KAAK,SAAW,MAEpD,KAAM,CAAE,QAAS,eAAiB,KAAM,EAAI,KAAK,eAAe,IAAK,KAAM,OAAQ,IAAI,EACvF,KAAK,qBAAqB,IAAK,QAAS,KAAM,MAAM,EACpD,GAAI,CAAC,aAAa,IAAI,EAAG,WAAW,KAAK,QAAQ,IAAI,CAAC,EACtD,OAAO,SAAS,IAAK,KAAM,UAAW,cAAc,CACtD,CARS,4BAUT,SAAS,aAAc,KAAM,CAC3B,MAAM,OAAS,KAAK,QAAQ,IAAI,EAChC,MAAM,WAAa,KAAK,MAAM,MAAM,EACpC,OAAO,WAAW,OAAS,MAC7B,CAJS,oCAMT,SAAS,SAAU,IAAK,KAAM,UAAW,eAAgB,CACvD,GAAI,eAAgB,OAAO,OAAO,IAAK,KAAM,SAAS,EACtD,GAAI,UAAW,CACb,WAAW,IAAI,EACf,OAAO,OAAO,IAAK,KAAM,SAAS,CACpC,CACA,GAAI,GAAG,WAAW,IAAI,EAAG,MAAM,IAAI,MAAM,sBAAsB,EAC/D,OAAO,OAAO,IAAK,KAAM,SAAS,CACpC,CARS,4BAUT,SAAS,OAAQ,IAAK,KAAM,UAAW,CACrC,GAAI,CACF,GAAG,WAAW,IAAK,IAAI,CACzB,OAAS,IAAP,CACA,GAAI,IAAI,OAAS,QAAS,MAAM,IAChC,OAAO,iBAAiB,IAAK,KAAM,SAAS,CAC9C,CACF,CAPS,wBAST,SAAS,iBAAkB,IAAK,KAAM,UAAW,CAC/C,MAAM,KAAO,CACX,UACA,aAAc,KACd,mBAAoB,IACtB,EACA,SAAS,IAAK,KAAM,IAAI,EACxB,OAAO,WAAW,GAAG,CACvB,CARS,4CAUT,OAAO,QAAU","names":[],"sources":["/root/porla/data_system-web/node_modules/.pnpm/fs-extra@11.1.1/node_modules/fs-extra/lib/move/move-sync.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirpSync\nconst stat = require('../util/stat')\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat, isChangingCase = false } = stat.checkPathsSync(src, dest, 'move', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  if (!isParentRoot(dest)) mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite, isChangingCase)\n}\n\nfunction isParentRoot (dest) {\n  const parent = path.dirname(dest)\n  const parsedPath = path.parse(parent)\n  return parsedPath.root === parent\n}\n\nfunction doRename (src, dest, overwrite, isChangingCase) {\n  if (isChangingCase) return rename(src, dest, overwrite)\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true,\n    preserveTimestamps: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n"]}}