{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const fs=require(\"graceful-fs\");function symlinkType(srcpath,type,callback){callback=typeof type===\"function\"?type:callback;type=typeof type===\"function\"?false:type;if(type)return callback(null,type);fs.lstat(srcpath,(err,stats)=>{if(err)return callback(null,\"file\");type=stats&&stats.isDirectory()?\"dir\":\"file\";callback(null,type)})}__name(symlinkType,\"symlinkType\");function symlinkTypeSync(srcpath,type){let stats;if(type)return type;try{stats=fs.lstatSync(srcpath)}catch{return\"file\"}return stats&&stats.isDirectory()?\"dir\":\"file\"}__name(symlinkTypeSync,\"symlinkTypeSync\");module.exports={symlinkType,symlinkTypeSync};\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,MAAM,GAAK,QAAQ,aAAa,EAEhC,SAAS,YAAa,QAAS,KAAM,SAAU,CAC7C,SAAY,OAAO,OAAS,WAAc,KAAO,SACjD,KAAQ,OAAO,OAAS,WAAc,MAAQ,KAC9C,GAAI,KAAM,OAAO,SAAS,KAAM,IAAI,EACpC,GAAG,MAAM,QAAS,CAAC,IAAK,QAAU,CAChC,GAAI,IAAK,OAAO,SAAS,KAAM,MAAM,EACrC,KAAQ,OAAS,MAAM,YAAY,EAAK,MAAQ,OAChD,SAAS,KAAM,IAAI,CACrB,CAAC,CACH,CATS,kCAWT,SAAS,gBAAiB,QAAS,KAAM,CACvC,IAAI,MAEJ,GAAI,KAAM,OAAO,KACjB,GAAI,CACF,MAAQ,GAAG,UAAU,OAAO,CAC9B,MAAE,CACA,MAAO,MACT,CACA,OAAQ,OAAS,MAAM,YAAY,EAAK,MAAQ,MAClD,CAVS,0CAYT,OAAO,QAAU,CACf,YACA,eACF","names":[],"sources":["/root/porla/front-end-mergeVersion/fantastic-admin.v2.11.0/node_modules/.pnpm/fs-extra@11.1.1/node_modules/fs-extra/lib/ensure/symlink-type.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\n\nfunction symlinkType (srcpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n  if (type) return callback(null, type)\n  fs.lstat(srcpath, (err, stats) => {\n    if (err) return callback(null, 'file')\n    type = (stats && stats.isDirectory()) ? 'dir' : 'file'\n    callback(null, type)\n  })\n}\n\nfunction symlinkTypeSync (srcpath, type) {\n  let stats\n\n  if (type) return type\n  try {\n    stats = fs.lstatSync(srcpath)\n  } catch {\n    return 'file'\n  }\n  return (stats && stats.isDirectory()) ? 'dir' : 'file'\n}\n\nmodule.exports = {\n  symlinkType,\n  symlinkTypeSync\n}\n"]}}