{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const u=require(\"universalify\").fromCallback;const path=require(\"path\");const fs=require(\"graceful-fs\");const mkdir=require(\"../mkdirs\");function createFile(file,callback){function makeFile(){fs.writeFile(file,\"\",err=>{if(err)return callback(err);callback()})}__name(makeFile,\"makeFile\");fs.stat(file,(err,stats)=>{if(!err&&stats.isFile())return callback();const dir=path.dirname(file);fs.stat(dir,(err2,stats2)=>{if(err2){if(err2.code===\"ENOENT\"){return mkdir.mkdirs(dir,err3=>{if(err3)return callback(err3);makeFile()})}return callback(err2)}if(stats2.isDirectory())makeFile();else{fs.readdir(dir,err3=>{if(err3)return callback(err3)})}})})}__name(createFile,\"createFile\");function createFileSync(file){let stats;try{stats=fs.statSync(file)}catch{}if(stats&&stats.isFile())return;const dir=path.dirname(file);try{if(!fs.statSync(dir).isDirectory()){fs.readdirSync(dir)}}catch(err){if(err&&err.code===\"ENOENT\")mkdir.mkdirsSync(dir);else throw err}fs.writeFileSync(file,\"\")}__name(createFileSync,\"createFileSync\");module.exports={createFile:u(createFile),createFileSync};\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,MAAM,EAAI,QAAQ,cAAc,EAAE,aAClC,MAAM,KAAO,QAAQ,MAAM,EAC3B,MAAM,GAAK,QAAQ,aAAa,EAChC,MAAM,MAAQ,QAAQ,WAAW,EAEjC,SAAS,WAAY,KAAM,SAAU,CACnC,SAAS,UAAY,CACnB,GAAG,UAAU,KAAM,GAAI,KAAO,CAC5B,GAAI,IAAK,OAAO,SAAS,GAAG,EAC5B,SAAS,CACX,CAAC,CACH,CALS,4BAOT,GAAG,KAAK,KAAM,CAAC,IAAK,QAAU,CAC5B,GAAI,CAAC,KAAO,MAAM,OAAO,EAAG,OAAO,SAAS,EAC5C,MAAM,IAAM,KAAK,QAAQ,IAAI,EAC7B,GAAG,KAAK,IAAK,CAACA,KAAKC,SAAU,CAC3B,GAAID,KAAK,CAEP,GAAIA,KAAI,OAAS,SAAU,CACzB,OAAO,MAAM,OAAO,IAAKA,MAAO,CAC9B,GAAIA,KAAK,OAAO,SAASA,IAAG,EAC5B,SAAS,CACX,CAAC,CACH,CACA,OAAO,SAASA,IAAG,CACrB,CAEA,GAAIC,OAAM,YAAY,EAAG,SAAS,MAC7B,CAGH,GAAG,QAAQ,IAAKD,MAAO,CACrB,GAAIA,KAAK,OAAO,SAASA,IAAG,CAC9B,CAAC,CACH,CACF,CAAC,CACH,CAAC,CACH,CAjCS,gCAmCT,SAAS,eAAgB,KAAM,CAC7B,IAAI,MACJ,GAAI,CACF,MAAQ,GAAG,SAAS,IAAI,CAC1B,MAAE,CAAO,CACT,GAAI,OAAS,MAAM,OAAO,EAAG,OAE7B,MAAM,IAAM,KAAK,QAAQ,IAAI,EAC7B,GAAI,CACF,GAAI,CAAC,GAAG,SAAS,GAAG,EAAE,YAAY,EAAG,CAGnC,GAAG,YAAY,GAAG,CACpB,CACF,OAAS,IAAP,CAEA,GAAI,KAAO,IAAI,OAAS,SAAU,MAAM,WAAW,GAAG,MACjD,OAAM,GACb,CAEA,GAAG,cAAc,KAAM,EAAE,CAC3B,CArBS,wCAuBT,OAAO,QAAU,CACf,WAAY,EAAE,UAAU,EACxB,cACF","names":["err","stats"],"sources":["/root/porla/front-end-mergeVersion/fantastic-admin.v2.11.0/node_modules/.pnpm/fs-extra@11.1.1/node_modules/fs-extra/lib/ensure/file.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\n\nfunction createFile (file, callback) {\n  function makeFile () {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err)\n      callback()\n    })\n  }\n\n  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback()\n    const dir = path.dirname(file)\n    fs.stat(dir, (err, stats) => {\n      if (err) {\n        // if the directory doesn't exist, make it\n        if (err.code === 'ENOENT') {\n          return mkdir.mkdirs(dir, err => {\n            if (err) return callback(err)\n            makeFile()\n          })\n        }\n        return callback(err)\n      }\n\n      if (stats.isDirectory()) makeFile()\n      else {\n        // parent is not a directory\n        // This is just to cause an internal ENOTDIR error to be thrown\n        fs.readdir(dir, err => {\n          if (err) return callback(err)\n        })\n      }\n    })\n  })\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch {}\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  try {\n    if (!fs.statSync(dir).isDirectory()) {\n      // parent is not a directory\n      // This is just to cause an internal ENOTDIR error to be thrown\n      fs.readdirSync(dir)\n    }\n  } catch (err) {\n    // If the stat call above failed because the directory doesn't exist, create it\n    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir)\n    else throw err\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n"]}}