{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});const u=require(\"universalify\").fromCallback;const fs=require(\"graceful-fs\");const path=require(\"path\");const mkdir=require(\"../mkdirs\");const pathExists=require(\"../path-exists\").pathExists;function outputFile(file,data,encoding,callback){if(typeof encoding===\"function\"){callback=encoding;encoding=\"utf8\"}const dir=path.dirname(file);pathExists(dir,(err,itDoes)=>{if(err)return callback(err);if(itDoes)return fs.writeFile(file,data,encoding,callback);mkdir.mkdirs(dir,err2=>{if(err2)return callback(err2);fs.writeFile(file,data,encoding,callback)})})}__name(outputFile,\"outputFile\");function outputFileSync(file,...args){const dir=path.dirname(file);if(fs.existsSync(dir)){return fs.writeFileSync(file,...args)}mkdir.mkdirsSync(dir);fs.writeFileSync(file,...args)}__name(outputFileSync,\"outputFileSync\");module.exports={outputFile:u(outputFile),outputFileSync};\n})()\n","warnings":[],"map":{"version":3,"mappings":";+HAEA,MAAM,EAAI,QAAQ,cAAc,EAAE,aAClC,MAAM,GAAK,QAAQ,aAAa,EAChC,MAAM,KAAO,QAAQ,MAAM,EAC3B,MAAM,MAAQ,QAAQ,WAAW,EACjC,MAAM,WAAa,QAAQ,gBAAgB,EAAE,WAE7C,SAAS,WAAY,KAAM,KAAM,SAAU,SAAU,CACnD,GAAI,OAAO,WAAa,WAAY,CAClC,SAAW,SACX,SAAW,MACb,CAEA,MAAM,IAAM,KAAK,QAAQ,IAAI,EAC7B,WAAW,IAAK,CAAC,IAAK,SAAW,CAC/B,GAAI,IAAK,OAAO,SAAS,GAAG,EAC5B,GAAI,OAAQ,OAAO,GAAG,UAAU,KAAM,KAAM,SAAU,QAAQ,EAE9D,MAAM,OAAO,IAAKA,MAAO,CACvB,GAAIA,KAAK,OAAO,SAASA,IAAG,EAE5B,GAAG,UAAU,KAAM,KAAM,SAAU,QAAQ,CAC7C,CAAC,CACH,CAAC,CACH,CAjBS,gCAmBT,SAAS,eAAgB,QAAS,KAAM,CACtC,MAAM,IAAM,KAAK,QAAQ,IAAI,EAC7B,GAAI,GAAG,WAAW,GAAG,EAAG,CACtB,OAAO,GAAG,cAAc,KAAM,GAAG,IAAI,CACvC,CACA,MAAM,WAAW,GAAG,EACpB,GAAG,cAAc,KAAM,GAAG,IAAI,CAChC,CAPS,wCAST,OAAO,QAAU,CACf,WAAY,EAAE,UAAU,EACxB,cACF","names":["err"],"sources":["/root/porla/data_system-web/node_modules/.pnpm/fs-extra@11.1.1/node_modules/fs-extra/lib/output-file/index.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction outputFile (file, data, encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding\n    encoding = 'utf8'\n  }\n\n  const dir = path.dirname(file)\n  pathExists(dir, (err, itDoes) => {\n    if (err) return callback(err)\n    if (itDoes) return fs.writeFile(file, data, encoding, callback)\n\n    mkdir.mkdirs(dir, err => {\n      if (err) return callback(err)\n\n      fs.writeFile(file, data, encoding, callback)\n    })\n  })\n}\n\nfunction outputFileSync (file, ...args) {\n  const dir = path.dirname(file)\n  if (fs.existsSync(dir)) {\n    return fs.writeFileSync(file, ...args)\n  }\n  mkdir.mkdirsSync(dir)\n  fs.writeFileSync(file, ...args)\n}\n\nmodule.exports = {\n  outputFile: u(outputFile),\n  outputFileSync\n}\n"]}}